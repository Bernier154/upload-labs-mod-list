on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Read manifest.json version_number
        id: manifest
        run: |
          VERSION=$(jq -r '.version_number' manifest.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Check if release already exists
        id: check_release
        run: |
          VERSION=${{ steps.manifest.outputs.version }}
          echo "Checking for existing release v$VERSION"
          if gh release view "v$VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release zip (if not exists)
        if: steps.check_release.outputs.exists == 'false'
        run: |
          VERSION=${{ steps.manifest.outputs.version }}
          echo "Creating zip for version v$VERSION"
          mkdir release
          zip -r "release/repo-v$VERSION.zip" . \
            -x ".git/*" \
               ".github/*" \
               ".vscode/*" \
               "release/*"
          echo "zip_path=release/repo-v$VERSION.zip" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create GitHub Release
        if: steps.check_release.outputs.exists == 'false'
        run: |
          VERSION=${{ steps.manifest.outputs.version }}
          ZIP_FILE="release/repo-v$VERSION.zip"
          gh release create "v$VERSION" \
            --title "Release v$VERSION" \
            --notes "Auto-generated release from manifest.json" \
            "$ZIP_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
